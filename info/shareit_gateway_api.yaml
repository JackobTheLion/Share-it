openapi: "3.0.3"
info:
  title: "Shareit Gateway API"
  description: "java_shareit API"
  version: "1.0.0"
servers:
  - url: "https://localhost:8080"
paths:
  /bookings:
    get:
      summary: "GET bookings"
      operationId: "getUserBookings"
      parameters:
        - name: "state"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "all"
        - name: "from"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    post:
      summary: "POST bookings"
      operationId: "addBooking"
      parameters:
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingRequestDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /bookings/owner:
    get:
      summary: "GET bookings/owner"
      operationId: "getOwnerBooking"
      parameters:
        - name: "state"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "all"
        - name: "from"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /bookings/{bookingId}:
    get:
      summary: "GET bookings/{bookingId}"
      operationId: "getBooking"
      parameters:
        - name: "bookingId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    patch:
      summary: "PATCH bookings/{bookingId}"
      operationId: "updateBooking"
      parameters:
        - name: "bookingId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "approved"
          in: "query"
          required: true
          schema:
            type: "boolean"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /items:
    get:
      summary: "GET items"
      operationId: "getAllItems"
      parameters:
        - name: "from"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: false
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    post:
      summary: "POST items"
      operationId: "addItem"
      parameters:
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRequestDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /items/search:
    get:
      summary: "GET items/search"
      operationId: "searchItem"
      parameters:
        - name: "text"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "from"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /items/{itemId}:
    get:
      summary: "GET items/{itemId}"
      operationId: "getItem"
      parameters:
        - name: "itemId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: false
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    patch:
      summary: "PATCH items/{itemId}"
      operationId: "updateItem"
      parameters:
        - name: "itemId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRequestDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    delete:
      summary: "DELETE items/{itemId}"
      operationId: "deleteItem"
      parameters:
        - name: "itemId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /items/{itemId}/comment:
    post:
      summary: "POST items/{itemId}/comment"
      operationId: "addComment"
      parameters:
        - name: "itemId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /requests:
    get:
      summary: "GET requests"
      operationId: "getOwnRequests"
      parameters:
        - name: "from"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    post:
      summary: "POST requests"
      operationId: "addRequest"
      parameters:
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRequestRequestDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /requests/all:
    get:
      summary: "GET requests/all"
      operationId: "getRequests"
      parameters:
        - name: "from"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /requests/{requestId}:
    get:
      summary: "GET requests/{requestId}"
      operationId: "findRequest"
      parameters:
        - name: "requestId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "X-Sharer-User-Id"
          in: "header"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /users:
    get:
      summary: "GET users"
      operationId: "getAllUsers"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    post:
      summary: "POST users"
      operationId: "addUser"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequestDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /users/{userId}:
    get:
      summary: "GET users/{userId}"
      operationId: "getUser"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    patch:
      summary: "PATCH users/{userId}"
      operationId: "updateUser"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequestDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    delete:
      summary: "DELETE users/{userId}"
      operationId: "deleteUser"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
components:
  schemas:
    Object:
      type: "object"
      properties: { }
    CommentDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        text:
          type: "string"
        authorName:
          type: "string"
        created:
          type: "string"
          format: "date-time"
    BookingDtoItem:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        bookerId:
          type: "integer"
          format: "int64"
    ItemResponseDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        available:
          type: "boolean"
        comments:
          type: "array"
          items:
            $ref: "#/components/schemas/CommentDto"
        requestId:
          type: "integer"
          format: "int64"
        lastBooking:
          $ref: "#/components/schemas/BookingDtoItem"
        nextBooking:
          $ref: "#/components/schemas/BookingDtoItem"
    UserResponseDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        email:
          type: "string"
        name:
          type: "string"
    BookingRequestDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        itemId:
          type: "integer"
          format: "int64"
        start:
          type: "string"
          format: "date-time"
        end:
          type: "string"
          format: "date-time"
        item:
          $ref: "#/components/schemas/ItemResponseDto"
        booker:
          $ref: "#/components/schemas/UserResponseDto"
        status:
          type: "string"
          enum:
            - "APPROVED"
            - "REJECTED"
            - "WAITING"
            - "CANCELED"
    ItemRequestDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        available:
          type: "boolean"
        comments:
          type: "array"
          items:
            $ref: "#/components/schemas/CommentDto"
        requestId:
          type: "integer"
          format: "int64"
        lastBooking:
          $ref: "#/components/schemas/BookingDtoItem"
        nextBooking:
          $ref: "#/components/schemas/BookingDtoItem"
    ItemInRequestDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        ownerId:
          type: "integer"
          format: "int64"
        description:
          type: "string"
        available:
          type: "boolean"
        requestId:
          type: "integer"
          format: "int64"
    ItemRequestRequestDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        description:
          type: "string"
        requesterId:
          type: "integer"
          format: "int64"
        created:
          type: "string"
          format: "date-time"
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemInRequestDto"
    UserRequestDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        email:
          type: "string"
        name:
          type: "string"